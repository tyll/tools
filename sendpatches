#! /usr/bin/python3 -tt
# vim: fileencoding=utf8
#{{{ License header: MIT
# Copyright (c) 2016 Till Maas <opensource@till.name>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#}}}

import argparse
import datetime
import glob
import os
import shutil
import subprocess
import sys
import tempfile


def getproject():
    cmd = ("git", "remote", "-v")
    output = subprocess.check_output(cmd).decode("utf-8")

    firstline = output.splitlines()[0]
    project = firstline.split(" ")[-2].split(":")[1]
    return project


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("--project", default=None)
    parser.add_argument("--base", default="origin/master",
                        help="Patch base, default: %(default)s")
    parser.add_argument("recipient", default=None, nargs="?")
    args = parser.parse_args()

    if args.recipient is None:
        try:
            args.recipient = subprocess.check_output(
                ("git", "config", "sendemail.to"))
        except subprocess.CalledProcessError:
            pass
    if not args.recipient:
        sys.stderr.write("No recipient specified")
        sys.exit(1)

    if args.project is None:
        args.project = getproject()

    tempdir = tempfile.mkdtemp()

    cmd = ("git", "format-patch", "--output-directory", tempdir,
           "--cover-letter", args.base)
    subprocess.check_call(cmd)

    coverletter = os.path.join(tempdir, "0000-cover-letter.patch")
    patches = sorted(glob.glob(os.path.join(tempdir, "*.patch")))
    patches = [f for f in patches if f != coverletter]

    now = datetime.datetime.now()
    with open(coverletter, "r+") as letterfile:
        data = letterfile.read()
        letterfile.seek(0)
        letterfile.truncate()
        subject = "{} changes ({})".format(args.project, now)
        data = data.replace("*** SUBJECT HERE ***", subject)
        data = data.replace("*** BLURB HERE ***\n", "")
        data
        letterfile.write(data)

    cmd = ["mutt", "-H", coverletter, "-a"]
    cmd.extend(patches)
    cmd.extend(["--", args.recipient])

    subprocess.check_call(cmd)

    shutil.rmtree(tempdir)
